{
	"info": {
		"_postman_id": "d92a84de-3b8b-4a0d-9f07-75e193fe2027",
		"name": "Recipe App API",
		"description": "Документация REST API для Recipe App\n\n[https://documenter.getpostman.com/view/40022993/2sB2qZDgt7](https://documenter.getpostman.com/view/40022993/2sB2qZDgt7)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40022993"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Регистрация пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random = Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"randomInt\", random);\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.be.a(\"number\");\r",
									"    pm.expect(json.first_name).to.be.a(\"string\");\r",
									"    pm.expect(json.last_name).to.be.a(\"string\");\r",
									"    pm.expect(json.token).to.be.a(\"string\");\r",
									"    \r",
									"    pm.environment.set(\"userId\", json.id);\r",
									"    pm.environment.set(\"bearerToken\", json.token);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user{{randomInt}}@example.com\",\n  \"password\": \"password\",\n  \"first_name\": \"user\",\n  \"last_name\": \"user\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"token\": \"<string>\"\n}"
						},
						{
							"name": "Invalid input or email already in use",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Авторизация пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains token\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.token).to.be.a(\"string\");\r",
									"    pm.environment.set(\"bearerToken\", json.token);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"artur@example.com\",\n  \"password\": \"artur\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"<string>\"\n}"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Invalid Credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "comment",
			"item": [
				{
					"name": "Все комментарии",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of all comments\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        const c = json[0];\r",
									"        pm.expect(c).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(c).to.have.property(\"content\").that.is.a(\"string\");\r",
									"        pm.expect(c).to.have.property(\"user\").that.is.an(\"object\");\r",
									"        pm.expect(c).to.have.property(\"recipe\").that.is.an(\"object\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/comment/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"all"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"all"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"all"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Мои комментарии",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of comments by current user\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(c => {\r",
									"        pm.expect(c).to.have.property(\"user\").that.is.an(\"object\");\r",
									"        pm.expect(c.user.id).to.eql(Number(pm.environment.get(\"userId\")));\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/comment/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								"me"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"me"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Комментарии пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of comments by specified user\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(c => {\r",
									"        pm.expect(c).to.have.property(\"user\").that.is.an(\"object\");\r",
									"        pm.expect(c.user.id).to.eql(Number(pm.environment.get(\"userId\")));\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/comment/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать комментарий",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const commentContent = \"TestComment_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"commentContent\", commentContent);\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has created Comment with id, content, user and recipe\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"content\").that.equals(pm.environment.get(\"commentContent\"));\r",
									"    pm.expect(json).to.have.property(\"created_at\").that.is.a(\"string\");\r",
									"\r",
									"    pm.expect(json).to.have.property(\"user\").that.is.an(\"object\");\r",
									"    pm.expect(json.user).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json.user).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"    pm.expect(json.user).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"\r",
									"    pm.expect(json).to.have.property(\"recipe\").that.is.an(\"object\");\r",
									"    pm.expect(json.recipe).to.have.property(\"id\").that.equals(Number(pm.environment.get(\"recipeId\")));\r",
									"    pm.expect(json.recipe).to.have.property(\"title\").that.is.a(\"string\");\r",
									"\r",
									"    pm.environment.set(\"commentId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"{{commentContent}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comment/:recipeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								":recipeId"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"content\": \"<string>\",\n  \"created_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Комментарии к рецепту",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of comments for given recipe\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(comment => {\r",
									"        pm.expect(comment).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(comment).to.have.property(\"content\").that.is.a(\"string\");\r",
									"        pm.expect(comment).to.have.property(\"created_at\").that.is.a(\"string\");\r",
									"        pm.expect(comment).to.have.nested.property(\"recipe.id\").that.equals(Number(pm.environment.get(\"recipeId\")));\r",
									"        pm.expect(comment).to.have.property(\"user\").that.is.an(\"object\");\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/comment/:recipeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								":recipeId"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"content\": \"<string>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/comment/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить комментарий",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response confirms update\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"Comment updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"{{commentContent}}_Updated\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{commentId}}",
									"description": "(Required) ID комментария"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить комментарий",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{commentId}}",
									"description": "(Required) ID комментария"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/comment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"comment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "dish-type",
			"item": [
				{
					"name": "Список типов блюд",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of DishTypes\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\");\r",
									"        pm.expect(json[0]).to.have.property(\"name\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dish-type/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dish-type",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dish-type/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать тип блюда",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomDishName = \"TestDishType_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"dishTypeName\", randomDishName);\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"name\").that.equals(pm.environment.get(\"dishTypeName\"));\r",
									"    pm.environment.set(\"dishTypeId\", json.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{dishTypeName}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dish-type/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dish-type",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										""
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Тип блюда",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"DishType data is correct\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"dishTypeId\")));\r",
									"    pm.expect(json.name).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dish-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dish-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{dishTypeId}}",
									"description": "(Required) ID типа блюда"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить тип блюда",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Update message received\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"DishType updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{dishTypeName}}_Updated\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dish-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dish-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{dishTypeId}}",
									"description": "(Required) ID типа блюда"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить тип блюда",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dish-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dish-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{dishTypeId}}",
									"description": "(Required) ID типа блюда"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/dish-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dish-type",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "ingredient",
			"item": [
				{
					"name": "Список ингредиентов",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of ingredients\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"name\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ingredient/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingredient",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingredient/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создание ингредиента",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomIngredientName = \"TestIngredient_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"ingredientName\", randomIngredientName);\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has created Ingredient with id and correct name\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"name\").that.equals(pm.environment.get(\"ingredientName\"));\r",
									"    pm.environment.set(\"ingredientId\", json.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{ingredientName}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ingredient/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingredient",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										""
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Ингредиент",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains ingredient with correct id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"ingredientId\")));\r",
									"    pm.expect(json.name).to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ingredient/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingredient",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{ingredientId}}",
									"description": "(Required) ID ингредиента"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновление ингредиента",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation message\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"Ingredient updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{ingredientName}}_Updated\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ingredient/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingredient",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{ingredientId}}",
									"description": "(Required) ID ингредиента"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удаление ингредиента",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ingredient/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ingredient",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{ingredientId}}",
									"description": "(Required) ID ингредиента"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ingredient/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ingredient",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "like",
			"item": [
				{
					"name": "Создать лайк",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"expectedStatus\", 201);\r",
									"pm.environment.set(\"likeRecipeId\", 4);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains valid Like object\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"created_at\");\r",
									"    pm.expect(json.user).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json.recipe).to.have.property(\"id\").that.equals(Number(pm.environment.get(\"likeRecipeId\")));\r",
									"    pm.environment.set(\"likeId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipeId\": {{likeRecipeId}}\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/like",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like"
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/like",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Лайки пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains likes for specific user\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0].user).to.have.property(\"id\").that.equals(pm.environment.get(\"userId\"));\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/like/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/like/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/like/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Лайки для рецепта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Likes are for correct recipe\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0].recipe.id).to.eql(Number(pm.environment.get(\"likeRecipeId\")));\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/like/recipe/:recipeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like",
								"recipe",
								":recipeId"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{likeRecipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/recipe/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"recipe",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/like/recipe/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"recipe",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/like/recipe/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"recipe",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Лайк",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct like\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"likeId\")));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/like/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{likeId}}",
									"description": "(Required) ID лайка"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить лайк",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/like/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{likeId}}",
									"description": "(Required) ID лайка"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Все лайки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"All likes are returned\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/like/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"all"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"all"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"all"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Мои лайки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of Like objects\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\");\r",
									"        pm.expect(json[0].user).to.have.property(\"id\").that.equals(pm.environment.get(\"userId\"));\r",
									"        pm.expect(json[0]).to.have.property(\"created_at\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/like/mine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"like",
								"mine"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/mine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"mine"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/mine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"mine"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/like/mine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"like",
										"mine"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "recipe-difficulty",
			"item": [
				{
					"name": "Список уровней сложности рецептов",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is an array of difficulties\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"name\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe-difficulty/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-difficulty",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать уровень сложности рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomRecipeDifficulty = \"TestRecipeDifficulty_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"recipeDifficultyName\", randomRecipeDifficulty);\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains created difficulty with id and name\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"name\").that.equals(pm.environment.get(\"recipeDifficultyName\"));\r",
									"    pm.environment.set(\"recipeDifficultyId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{recipeDifficultyName}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe-difficulty/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-difficulty",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										""
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Уровень сложности рецепта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains difficulty with correct id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"recipeDifficultyId\")));\r",
									"    pm.expect(json.name).to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe-difficulty/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-difficulty",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{recipeDifficultyId}}",
									"description": "(Required) ID уровня сложности рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить уровень сложности рецепта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation message\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"RecipeDifficulty updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{recipeDifficultyName}}_Updated\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe-difficulty/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-difficulty",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{recipeDifficultyId}}",
									"description": "(Required) ID уровня сложности рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить уровень сложности рецепта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipe-difficulty/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-difficulty",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{recipeDifficultyId}}",
									"description": "(Required) ID уровня сложности рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-difficulty/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-difficulty",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "recipe-ingredient",
			"item": [
				{
					"name": "Ингредиент рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct RecipeIngredient\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"recipeIngredientId\")));\r",
									"    pm.expect(json).to.have.property(\"ingredient\").that.is.an(\"object\");\r",
									"    pm.expect(json).to.have.property(\"recipe\").that.is.an(\"object\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-ingredient",
								":recipeId",
								":id"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{recipeIngredientId}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\",\n  \"ingredient\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить ингредиент рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"updatedUnit\", \"мл\");\r",
									"pm.environment.set(\"updatedQuantity\", 321);\r",
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation message\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"RecipeIngredient updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": {{updatedQuantity}},\n  \"unit\": \"{{updatedUnit}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-ingredient",
								":recipeId",
								":id"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{recipeIngredientId}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить ингредиент из рецепта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-ingredient",
								":recipeId",
								":id"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) "
								},
								{
									"key": "id",
									"value": "{{recipeIngredientId}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId",
										":id"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Список ингредиентов в рецепте",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of RecipeIngredients\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"\r",
									"    if (json.length > 0) {\r",
									"        const item = json[0];\r",
									"        pm.expect(item).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(item).to.have.property(\"quantity\").that.is.a(\"number\");\r",
									"        pm.expect(item).to.have.property(\"unit\").that.is.a(\"string\");\r",
									"        pm.expect(item).to.have.property(\"ingredient\").that.is.an(\"object\");\r",
									"        pm.expect(item).to.have.property(\"recipe\").that.is.an(\"object\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-ingredient",
								":recipeId"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"quantity\": \"<float>\",\n    \"unit\": \"<string>\",\n    \"ingredient\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"quantity\": \"<float>\",\n    \"unit\": \"<string>\",\n    \"ingredient\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Добавить ингредиент в рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const quantity = Math.floor(Math.random() * 100) + 1;\r",
									"const unit = \"г\";\r",
									"\r",
									"pm.environment.set(\"ingredientQuantity\", quantity);\r",
									"pm.environment.set(\"ingredientUnit\", unit);\r",
									"pm.variables.set(\"expectedStatus\", 201);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Created RecipeIngredient has expected properties\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json.quantity).to.eql(Number(pm.environment.get(\"ingredientQuantity\")));\r",
									"    pm.expect(json.unit).to.eql(pm.environment.get(\"ingredientUnit\"));\r",
									"    pm.expect(json).to.have.property(\"ingredient\").that.has.property(\"id\");\r",
									"    pm.expect(json).to.have.property(\"recipe\").that.has.property(\"id\");\r",
									"\r",
									"    pm.environment.set(\"recipeIngredientId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ingredientId\": {{ingredientId}},\n  \"quantity\": {{ingredientQuantity}},\n  \"unit\": \"{{ingredientUnit}}\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-ingredient",
								":recipeId"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\",\n  \"ingredient\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ingredientId\": \"<integer>\",\n  \"quantity\": \"<float>\",\n  \"unit\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-ingredient/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-ingredient",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "recipe",
			"item": [
				{
					"name": "Список рецептов",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of recipes\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"title\").that.is.a(\"string\");\r",
									"        pm.expect(json[0]).to.have.nested.property(\"dishType.id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.nested.property(\"recipeDifficulty.id\").that.is.a(\"number\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe?dishTypeId=&difficultyId=&ingredientIds=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe"
							],
							"query": [
								{
									"key": "dishTypeId",
									"value": "",
									"description": "Фильтр по ID типа блюда"
								},
								{
									"key": "difficultyId",
									"value": "",
									"description": "Фильтр по ID уровню сложности рецепта"
								},
								{
									"key": "ingredientIds",
									"value": "",
									"description": "Фильтр по списку ID ингредиентов"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe?dishTypeId=<integer>&difficultyId=<integer>&ingredientIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									],
									"query": [
										{
											"key": "dishTypeId",
											"value": "<integer>",
											"description": "Фильтр по ID типа блюда"
										},
										{
											"key": "difficultyId",
											"value": "<integer>",
											"description": "Фильтр по ID уровню сложности рецепта"
										},
										{
											"key": "ingredientIds",
											"value": "<string>",
											"description": "Фильтр по списку ID ингредиентов"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"preparation_time\": \"<integer>\",\n    \"cooking_time\": \"<integer>\",\n    \"servings\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"dishType\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeDifficulty\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeIngredients\": [\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"image\": \"<string>\",\n    \"video\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"preparation_time\": \"<integer>\",\n    \"cooking_time\": \"<integer>\",\n    \"servings\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"dishType\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeDifficulty\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeIngredients\": [\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"image\": \"<string>\",\n    \"video\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe?dishTypeId=<integer>&difficultyId=<integer>&ingredientIds=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									],
									"query": [
										{
											"key": "dishTypeId",
											"value": "<integer>",
											"description": "Фильтр по ID типа блюда"
										},
										{
											"key": "difficultyId",
											"value": "<integer>",
											"description": "Фильтр по ID уровню сложности рецепта"
										},
										{
											"key": "ingredientIds",
											"value": "<string>",
											"description": "Фильтр по списку ID ингредиентов"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomTitle = \"TestRecipe_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"recipeTitle\", randomTitle);\r",
									"pm.environment.set(\"dishTypeId\", 1);\r",
									"pm.environment.set(\"recipeDifficultyId\", 1);\r",
									"pm.environment.set(\"userId\", 1);\r",
									"pm.variables.set(\"expectedStatus\", 201);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has created Recipe with correct title and ids\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"title\").that.equals(pm.environment.get(\"recipeTitle\"));\r",
									"    pm.expect(json).to.have.nested.property(\"dishType.id\").that.equals(Number(pm.environment.get(\"dishTypeId\")));\r",
									"    pm.expect(json).to.have.nested.property(\"recipeDifficulty.id\").that.equals(Number(pm.environment.get(\"recipeDifficultyId\")));\r",
									"    pm.expect(json).to.have.nested.property(\"user.id\").that.equals(Number(pm.environment.get(\"userId\")));\r",
									"    pm.environment.set(\"recipeId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{recipeTitle}}\",\n  \"dishTypeId\": {{dishTypeId}},\n  \"recipeDifficultyId\": {{recipeDifficultyId}},\n  \"userId\": {{userId}},\n  \"preparation_time\": 15,\n  \"cooking_time\": 30,\n  \"servings\": 4,\n  \"description\": \"Test description\",\n  \"image\": \"http://example.com/image.jpg\",\n  \"video\": \"http://example.com/video.mp4\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe"
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"dishType\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"recipeDifficulty\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"recipeIngredients\": [\n    {\n      \"id\": \"<integer>\",\n      \"quantity\": \"<float>\",\n      \"unit\": \"<string>\",\n      \"ingredient\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<integer>\",\n      \"quantity\": \"<float>\",\n      \"unit\": \"<string>\",\n      \"ingredient\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"userId\": \"<integer>\",\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains recipe with correct id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"recipeId\")));\r",
									"    pm.expect(json).to.have.property(\"title\").that.is.a(\"string\");\r",
									"    pm.expect(json).to.have.nested.property(\"dishType.id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.nested.property(\"recipeDifficulty.id\").that.is.a(\"number\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"updated_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"dishType\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"recipeDifficulty\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  \"recipeIngredients\": [\n    {\n      \"id\": \"<integer>\",\n      \"quantity\": \"<float>\",\n      \"unit\": \"<string>\",\n      \"ingredient\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"id\": \"<integer>\",\n      \"quantity\": \"<float>\",\n      \"unit\": \"<string>\",\n      \"ingredient\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"description\": \"<string>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation message\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"Recipe updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{recipeTitle}}_Updated\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dishTypeId\": \"<integer>\",\n  \"recipeDifficultyId\": \"<integer>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"preparation_time\": \"<integer>\",\n  \"cooking_time\": \"<integer>\",\n  \"servings\": \"<integer>\",\n  \"image\": \"<string>\",\n  \"video\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить рецепт",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipe/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Рецепты пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of recipes for user\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"title\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"preparation_time\": \"<integer>\",\n    \"cooking_time\": \"<integer>\",\n    \"servings\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"dishType\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeDifficulty\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeIngredients\": [\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"image\": \"<string>\",\n    \"video\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"preparation_time\": \"<integer>\",\n    \"cooking_time\": \"<integer>\",\n    \"servings\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"dishType\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeDifficulty\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeIngredients\": [\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"image\": \"<string>\",\n    \"video\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error=",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Мои рецепты",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of own recipes\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"title\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe/mine",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe",
								"mine"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/mine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										"mine"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"preparation_time\": \"<integer>\",\n    \"cooking_time\": \"<integer>\",\n    \"servings\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"dishType\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeDifficulty\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeIngredients\": [\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"image\": \"<string>\",\n    \"video\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\",\n    \"preparation_time\": \"<integer>\",\n    \"cooking_time\": \"<integer>\",\n    \"servings\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"dishType\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeDifficulty\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"recipeIngredients\": [\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"quantity\": \"<float>\",\n        \"unit\": \"<string>\",\n        \"ingredient\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"description\": \"<string>\",\n    \"image\": \"<string>\",\n    \"video\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/mine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										"mine"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe/mine",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe",
										"mine"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "recipe-step",
			"item": [
				{
					"name": "Обновить шаг рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"RecipeStep updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"instruction\": \"{{recipeStepInstruction}}_Updated\",\n  \"image\": \"https://example.com/updated.jpg\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-step",
								":recipeId",
								":stepNumber"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								},
								{
									"key": "stepNumber",
									"value": "{{recipeStepNumber}}",
									"description": "(Required) Номер шага рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить шаг рецепта",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-step",
								":recipeId",
								":stepNumber"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								},
								{
									"key": "stepNumber",
									"value": "{{recipeStepNumber}}",
									"description": "(Required) Номер шага рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Список шагов рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of RecipeStep objects\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        const step = json[0];\r",
									"        pm.expect(step).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(step).to.have.property(\"step_number\").that.is.a(\"number\");\r",
									"        pm.expect(step).to.have.property(\"instruction\").that.is.a(\"string\");\r",
									"        pm.expect(step).to.have.property(\"image\");\r",
									"        pm.expect(step).to.have.property(\"recipe\").that.includes.keys([\"id\", \"title\"]);\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe-step/:recipeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-step",
								":recipeId"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"step_number\": \"<integer>\",\n    \"instruction\": \"<string>\",\n    \"image\": \"<string>\",\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"step_number\": \"<integer>\",\n    \"instruction\": \"<string>\",\n    \"image\": \"<string>\",\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId"
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Шаг рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains correct RecipeStep\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.step_number).to.eql(Number(pm.environment.get(\"recipeStepNumber\")));\r",
									"    pm.expect(json.instruction).to.eql(pm.environment.get(\"recipeStepInstruction\"));\r",
									"    pm.expect(json).to.have.property(\"image\");\r",
									"    pm.expect(json.recipe).to.have.property(\"id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-step",
								":recipeId",
								":stepNumber"
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								},
								{
									"key": "stepNumber",
									"value": "{{recipeStepNumber}}",
									"description": "(Required) Номер шага рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\",\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/:stepNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										":stepNumber"
									],
									"variable": [
										{
											"key": "recipeId"
										},
										{
											"key": "stepNumber"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать шаг рецепта",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomInstruction = \"Instruction_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"recipeStepInstruction\", randomInstruction);\r",
									"pm.environment.set(\"recipeStepNumber\", 1);\r",
									"pm.variables.set(\"expectedStatus\", 201);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains created RecipeStep with correct fields\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"step_number\", pm.environment.get(\"recipeStepNumber\"));\r",
									"    pm.expect(json).to.have.property(\"instruction\", pm.environment.get(\"recipeStepInstruction\"));\r",
									"    pm.expect(json).to.have.property(\"image\").that.is.a(\"string\");\r",
									"    pm.expect(json).to.have.property(\"recipe\").that.includes.keys([\"id\", \"title\"]);\r",
									"    pm.environment.set(\"recipeStepId\", json.id);\r",
									"    pm.environment.set(\"recipeStepNumber\", json.step_number);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"step_number\": {{recipeStepNumber}},\n  \"instruction\": \"{{recipeStepInstruction}}\",\n  \"image\": \"https://example.com/image.jpg\"\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recipe-step/:recipeId/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipe-step",
								":recipeId",
								""
							],
							"variable": [
								{
									"key": "recipeId",
									"value": "{{recipeId}}",
									"description": "(Required) ID рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										""
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\",\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										""
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										""
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"step_number\": \"<integer>\",\n  \"instruction\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recipe-step/:recipeId/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recipe-step",
										":recipeId",
										""
									],
									"variable": [
										{
											"key": "recipeId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "role",
			"item": [
				{
					"name": "Список ролей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response is array of roles with id and name\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"name\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать роль",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const randomName = \"TestRole_\" + Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"roleName\", randomName);\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response contains created role with id and name\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"name\").that.equals(pm.environment.get(\"roleName\"));\r",
									"    pm.environment.set(\"roleId\", json.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{roleName}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/role/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								""
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										""
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Роль",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response contains role with correct id and name\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"roleId\")));\r",
									"    pm.expect(json.name).to.be.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/role/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{roleId}}",
									"description": "(Required) ID роли"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновление роли",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response confirms update\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"Role updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{roleName}}_Updated\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/role/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{roleId}}",
									"description": "(Required) ID роли"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удаление роли",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/role/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"role",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{roleId}}",
									"description": "(Required) ID роли"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "saved-recipe",
			"item": [
				{
					"name": "Список сохраненных рецептов",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of saved recipes with basic fields\", () => {\r",
									"    const list = pm.response.json();\r",
									"    pm.expect(list).to.be.an(\"array\");\r",
									"    if (list.length > 0) {\r",
									"        const item = list[0];\r",
									"        pm.expect(item).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(item).to.have.nested.property(\"user.id\").that.is.a(\"number\");\r",
									"        pm.expect(item).to.have.nested.property(\"recipe.title\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/saved-recipe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-recipe"
							]
						}
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"recipe\": {\n      \"id\": \"<integer>\",\n      \"title\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Сохранить рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 201);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains saved recipe with id, user and recipe\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"created_at\");\r",
									"    pm.expect(json).to.have.nested.property(\"user.id\", parseInt(pm.environment.get(\"userId\")));\r",
									"    pm.expect(json).to.have.nested.property(\"recipe.id\", parseInt(pm.environment.get(\"recipeId\")));\r",
									"    pm.environment.set(\"savedRecipeId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipeId\": {{recipeId}}\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/saved-recipe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-recipe"
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\",\n  \"userId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Сохраненный рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the correct saved recipe\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"savedRecipeId\")));\r",
									"    pm.expect(json).to.have.nested.property(\"user.id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.nested.property(\"recipe.title\").that.is.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/saved-recipe/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-recipe",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{savedRecipeId}}",
									"description": "(Required) ID сохраненного рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"user\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"recipe\": {\n    \"id\": \"<integer>\",\n    \"title\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить сохраненный рецепт",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"message\").that.eql(\"SavedRecipe updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"recipeId\": 2\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/saved-recipe/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-recipe",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{savedRecipeId}}",
									"description": "(Required) ID сохраненного рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Invalid Input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipeId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить сохраненный рецепт",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/saved-recipe/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"saved-recipe",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{savedRecipeId}}",
									"description": "(Required) ID сохраненного рецепта"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/saved-recipe/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"saved-recipe",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "subscription",
			"item": [
				{
					"name": "Создать подписку",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"followingId\", 2);\r",
									"pm.variables.set(\"expectedStatus\", 201);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has created Subscription with id and correct follower/following\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"created_at\").that.is.a(\"string\");\r",
									"\r",
									"    pm.expect(json).to.have.property(\"follower\").that.is.an(\"object\");\r",
									"    pm.expect(json.follower).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json.follower).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"    pm.expect(json.follower).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"\r",
									"    pm.expect(json).to.have.property(\"following\").that.is.an(\"object\");\r",
									"    pm.expect(json.following).to.have.property(\"id\").that.equals(pm.environment.get(\"followingId\"));\r",
									"    pm.expect(json.following).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"    pm.expect(json.following).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"\r",
									"    pm.environment.set(\"subscriptionId\", json.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"followingId\": {{followingId}}\n}\n",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription"
							]
						}
					},
					"response": [
						{
							"name": "Created Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followingId\": \"<integer>\",\n  \"followerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"follower\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"following\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "You can not subscribe to yourself",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followingId\": \"<integer>\",\n  \"followerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followingId\": \"<integer>\",\n  \"followerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followingId\": \"<integer>\",\n  \"followerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"followingId\": \"<integer>\",\n  \"followerId\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Подписки пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of subscriptions with correct follower id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(sub => {\r",
									"        pm.expect(sub).to.have.property(\"follower\").that.is.an(\"object\");\r",
									"        pm.expect(sub.follower).to.have.property(\"id\").that.equals(Number(pm.variables.get(\"userId\")));\r",
									"        pm.expect(sub).to.have.property(\"following\").that.is.an(\"object\");\r",
									"        pm.expect(sub.following).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription/following/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"following",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/following/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"following",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subscription/following/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"following",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subscription/following/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"following",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Подписчики пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of subscriptions with correct following id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(sub => {\r",
									"        pm.expect(sub).to.have.property(\"following\").that.is.an(\"object\");\r",
									"        pm.expect(sub.following).to.have.property(\"id\").that.equals(Number(pm.variables.get(\"userId\")));\r",
									"        pm.expect(sub).to.have.property(\"follower\").that.is.an(\"object\");\r",
									"        pm.expect(sub.follower).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription/followers/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"followers",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/followers/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"followers",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subscription/followers/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"followers",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subscription/followers/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"followers",
										":userId"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Мои подписки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of subscriptions where follower is current user\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(sub => {\r",
									"        pm.expect(sub).to.have.property(\"follower\").that.is.an(\"object\");\r",
									"        pm.expect(sub.follower).to.have.property(\"id\").that.equals(pm.environment.get(\"userId\"));\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription/mine/following",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"mine",
								"following"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/mine/following",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"mine",
										"following"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/mine/following",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"mine",
										"following"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/mine/following",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"mine",
										"following"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Мои подписчики",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of subscriptions where following is current user\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    json.forEach(sub => {\r",
									"        pm.expect(sub).to.have.property(\"following\").that.is.an(\"object\");\r",
									"        pm.expect(sub.following).to.have.property(\"id\").that.equals(pm.environment.get(\"userId\"));\r",
									"    });\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription/mine/followers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"mine",
								"followers"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/mine/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"mine",
										"followers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/mine/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"mine",
										"followers"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/mine/followers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"mine",
										"followers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Все подписки",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Each subscription contains valid fields\", () => {\r",
									"    const json = pm.response.json();\r",
									"    if (json.length > 0) {\r",
									"        const sub = json[0];\r",
									"        pm.expect(sub).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(sub).to.have.property(\"created_at\");\r",
									"\r",
									"        pm.expect(sub).to.have.property(\"follower\");\r",
									"        pm.expect(sub.follower).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(sub.follower).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"        pm.expect(sub.follower).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"\r",
									"        pm.expect(sub).to.have.property(\"following\");\r",
									"        pm.expect(sub.following).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(sub.following).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"        pm.expect(sub.following).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"created_at\": \"<dateTime>\",\n    \"follower\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    },\n    \"following\": {\n      \"id\": \"<integer>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"all"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"all"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										"all"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Подписка",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains subscription with correct id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"subscriptionId\")));\r",
									"    pm.expect(json).to.have.property(\"follower\").that.is.an(\"object\");\r",
									"    pm.expect(json).to.have.property(\"following\").that.is.an(\"object\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subscription/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{subscriptionId}}",
									"description": "(Required) ID подписки"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"created_at\": \"<dateTime>\",\n  \"follower\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  },\n  \"following\": {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить подписку",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/subscription/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subscription",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{subscriptionId}}",
									"description": "(Required) ID подписки"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subscription/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subscription",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Список пользователей",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is array of users\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.be.an(\"array\");\r",
									"    if (json.length > 0) {\r",
									"        pm.expect(json[0]).to.have.property(\"id\").that.is.a(\"number\");\r",
									"        pm.expect(json[0]).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"        pm.expect(json[0]).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"        pm.expect(json[0]).to.have.property(\"role\").that.is.an(\"object\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"role\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"role\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Создать пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has required fields\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.be.a(\"number\");\r",
									"    pm.expect(json.first_name).to.be.a(\"string\");\r",
									"    pm.expect(json.last_name).to.be.a(\"string\");\r",
									"    \r",
									"    pm.environment.set(\"userId\", json.id);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const random = Math.floor(Math.random() * 1000000);\r",
									"pm.environment.set(\"randomInt\", random);\r",
									"pm.environment.set(\"userFirstName\", \"user\");\r",
									"pm.environment.set(\"userLastName\", \"user\");\r",
									"pm.variables.set(\"expectedStatus\", 201);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user{{randomInt}}@example.com\",\n  \"password\": \"password\",\n  \"first_name\": \"{{userFirstName}}\",\n  \"last_name\": \"{{userLastName}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": [
						{
							"name": "User created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}"
						},
						{
							"name": "Invalid input or email already in use",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Пользователь",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains user with correct id\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(Number(pm.environment.get(\"userId\")));\r",
									"    pm.expect(json.first_name).to.be.a(\"string\");\r",
									"    pm.expect(json.last_name).to.be.a(\"string\");\r",
									"    pm.expect(json.role).to.be.an(\"object\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"role\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Обновить пользователя",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains update confirmation message\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.message).to.eql(\"User updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{userFirstName}}_Updated\",\n  \"last_name\": \"{{userLastName}}_Updated\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Updated Successfully",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"profile_picture\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"gender\": \"м\",\n  \"bio\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"profile_picture\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"gender\": \"м\",\n  \"bio\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"profile_picture\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"gender\": \"м\",\n  \"bio\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"profile_picture\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"gender\": \"м\",\n  \"bio\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"profile_picture\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"gender\": \"м\",\n  \"bio\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"profile_picture\": \"<string>\",\n  \"phone_number\": \"<string>\",\n  \"gender\": \"м\",\n  \"bio\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Удалить пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 204);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}",
									"description": "(Required) ID пользователя"
								}
							]
						}
					},
					"response": [
						{
							"name": "Deleted Successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Текущий пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains current user data\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"id\").that.is.a(\"number\");\r",
									"    pm.expect(json).to.have.property(\"first_name\").that.is.a(\"string\");\r",
									"    pm.expect(json).to.have.property(\"last_name\").that.is.a(\"string\");\r",
									"    pm.expect(json).to.have.property(\"role\").that.is.an(\"object\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"expectedStatus\", 200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"first_name\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"role\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"me"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test('Response content type is application/json', function () {\r",
					"    if (pm.response.code === 204) return;\r",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
					"})\r",
					"\r",
					"pm.test('Response time is within acceptable range', function () {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
					"})\r",
					"\r",
					"const successCodes = [200, 201, 204];\r",
					"const errorCodes = [400, 401, 403, 404, 500];\r",
					"const expectedStatus = pm.variables.get(\"expectedStatus\") || 200;\r",
					"\r",
					"pm.test(\"Response has valid status code\", function () {\r",
					"    pm.expect(pm.response.code).to.be.oneOf([...successCodes, ...errorCodes]);\r",
					"});\r",
					"\r",
					"pm.test(`Status code is ${expectedStatus}`, function () {\r",
					"    pm.response.to.have.status(expectedStatus);\r",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		},
		{
			"key": "randomInt",
			"value": "",
			"type": "string"
		},
		{
			"key": "bearerToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "recipeId",
			"value": "",
			"type": "string"
		},
		{
			"key": "commentId",
			"value": "",
			"type": "string"
		},
		{
			"key": "subscriptionId",
			"value": "",
			"type": "string"
		}
	]
}