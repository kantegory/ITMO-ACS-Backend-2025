{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Ingredient": {
				"properties": {
					"quantity": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"quantity",
					"name"
				],
				"type": "object"
			},
			"RecipeContentBlock": {
				"anyOf": [
					{
						"properties": {
							"content": {
								"type": "string"
							},
							"type": {
								"type": "string",
								"enum": [
									"text"
								],
								"nullable": false
							}
						},
						"required": [
							"content",
							"type"
						],
						"type": "object"
					},
					{
						"properties": {
							"alt": {
								"type": "string"
							},
							"url": {
								"type": "string"
							},
							"type": {
								"type": "string",
								"enum": [
									"image"
								],
								"nullable": false
							}
						},
						"required": [
							"url",
							"type"
						],
						"type": "object"
					}
				]
			},
			"Recipe": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"ingredients": {
						"items": {
							"$ref": "#/components/schemas/Ingredient"
						},
						"type": "array"
					},
					"content": {
						"items": {
							"$ref": "#/components/schemas/RecipeContentBlock"
						},
						"type": "array"
					},
					"author": {
						"$ref": "#/components/schemas/User"
					},
					"tags": {
						"items": {
							"$ref": "#/components/schemas/Tag"
						},
						"type": "array"
					},
					"likes": {
						"items": {
							"$ref": "#/components/schemas/Like"
						},
						"type": "array"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"title",
					"description",
					"ingredients",
					"content",
					"author",
					"tags",
					"likes",
					"comments",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"description": "User model",
				"properties": {
					"id": {
						"type": "number",
						"format": "double",
						"description": "The unique identifier for the user",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "The user's full name",
						"example": "John Doe"
					},
					"email": {
						"type": "string",
						"description": "The user's email address",
						"example": "john.doe@example.com"
					},
					"password": {
						"type": "string",
						"description": "The user's password (hashed)",
						"example": "$2b$10$..."
					},
					"recipes": {
						"items": {
							"$ref": "#/components/schemas/Recipe"
						},
						"type": "array",
						"description": "Recipes created by the user"
					},
					"likes": {
						"items": {
							"$ref": "#/components/schemas/Like"
						},
						"type": "array",
						"description": "Likes given by the user"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment"
						},
						"type": "array",
						"description": "Comments made by the user"
					},
					"subscriptions": {
						"items": {
							"$ref": "#/components/schemas/Subscription"
						},
						"type": "array",
						"description": "Users that this user is subscribed to"
					},
					"subscribers": {
						"items": {
							"$ref": "#/components/schemas/Subscription"
						},
						"type": "array",
						"description": "Users that are subscribed to this user"
					}
				},
				"required": [
					"id",
					"name",
					"email",
					"password",
					"recipes",
					"likes",
					"comments",
					"subscriptions",
					"subscribers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Like": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"recipe": {
						"$ref": "#/components/schemas/Recipe"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"user",
					"recipe",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Comment": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"recipe": {
						"$ref": "#/components/schemas/Recipe"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"content",
					"user",
					"recipe",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Subscription": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"subscriber": {
						"$ref": "#/components/schemas/User"
					},
					"creator": {
						"$ref": "#/components/schemas/User"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"subscriber",
					"creator",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Tag": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"recipes": {
						"items": {
							"$ref": "#/components/schemas/Recipe"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"recipes"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.password__": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double",
						"description": "The unique identifier for the user",
						"example": 1
					},
					"name": {
						"type": "string",
						"description": "The user's full name",
						"example": "John Doe"
					},
					"email": {
						"type": "string",
						"description": "The user's email address",
						"example": "john.doe@example.com"
					},
					"recipes": {
						"items": {
							"$ref": "#/components/schemas/Recipe"
						},
						"type": "array",
						"description": "Recipes created by the user"
					},
					"likes": {
						"items": {
							"$ref": "#/components/schemas/Like"
						},
						"type": "array",
						"description": "Likes given by the user"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment"
						},
						"type": "array",
						"description": "Comments made by the user"
					},
					"subscriptions": {
						"items": {
							"$ref": "#/components/schemas/Subscription"
						},
						"type": "array",
						"description": "Users that this user is subscribed to"
					},
					"subscribers": {
						"items": {
							"$ref": "#/components/schemas/Subscription"
						},
						"type": "array",
						"description": "Users that are subscribed to this user"
					}
				},
				"required": [
					"id",
					"name",
					"email",
					"recipes",
					"likes",
					"comments",
					"subscriptions",
					"subscribers"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.password_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.password__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"AuthResponse": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/Omit_User.password_"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RegisterRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Tag_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"recipes": {
						"items": {
							"$ref": "#/components/schemas/Recipe"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_Subscription_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"subscriber": {
						"$ref": "#/components/schemas/User"
					},
					"creator": {
						"$ref": "#/components/schemas/User"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_Recipe_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"ingredients": {
						"items": {
							"$ref": "#/components/schemas/Ingredient"
						},
						"type": "array"
					},
					"content": {
						"items": {
							"$ref": "#/components/schemas/RecipeContentBlock"
						},
						"type": "array"
					},
					"author": {
						"$ref": "#/components/schemas/User"
					},
					"tags": {
						"items": {
							"$ref": "#/components/schemas/Tag"
						},
						"type": "array"
					},
					"likes": {
						"items": {
							"$ref": "#/components/schemas/Like"
						},
						"type": "array"
					},
					"comments": {
						"items": {
							"$ref": "#/components/schemas/Comment"
						},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_Like_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"recipe": {
						"$ref": "#/components/schemas/Recipe"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Partial_Comment_": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"content": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/User"
					},
					"recipe": {
						"$ref": "#/components/schemas/Recipe"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "Authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "lab1",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/users/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"description": "Register a new user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "User registration data",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterRequest",
								"description": "User registration data"
							}
						}
					}
				}
			}
		},
		"/users/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "The user and authentication token",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"description": "Login a user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "User login credentials",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest",
								"description": "User login credentials"
							}
						}
					}
				}
			}
		},
		"/users/email/{email}": {
			"get": {
				"operationId": "GetUserByEmail",
				"responses": {
					"200": {
						"description": "The user with the specified email",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get a user by email",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The email of the user to retrieve",
						"in": "path",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "john.doe@example.com"
					}
				]
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "The user with the specified ID",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"description": "Get a user by ID",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the user to retrieve",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						},
						"example": 1
					}
				]
			}
		},
		"/tags": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Tag"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all tags",
				"tags": [
					"Tags"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Create a new tag",
				"tags": [
					"Tags"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Tag_"
							}
						}
					}
				}
			}
		},
		"/tags/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Get a tag by ID",
				"tags": [
					"Tags"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Update an existing tag",
				"tags": [
					"Tags"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Tag_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"description": "Delete a tag",
				"tags": [
					"Tags"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/tags/name/{name}": {
			"get": {
				"operationId": "GetTagByName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Tag"
								}
							}
						}
					}
				},
				"description": "Get a tag by name",
				"tags": [
					"Tags"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/subscriptions": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Subscription"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all subscriptions",
				"tags": [
					"Subscriptions"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Subscription"
								}
							}
						}
					}
				},
				"description": "Create a new subscription",
				"tags": [
					"Subscriptions"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Subscription_"
							}
						}
					}
				}
			}
		},
		"/subscriptions/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Subscription"
								}
							}
						}
					}
				},
				"description": "Get a subscription by ID",
				"tags": [
					"Subscriptions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"description": "Delete a subscription",
				"tags": [
					"Subscriptions"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/subscriptions/subscriber/{subscriberId}": {
			"get": {
				"operationId": "GetSubscriptionsBySubscriber",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Subscription"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get subscriptions by subscriber ID (users that this user follows)",
				"tags": [
					"Subscriptions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "subscriberId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/subscriptions/creator/{creatorId}": {
			"get": {
				"operationId": "GetSubscriptionsByCreator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Subscription"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get subscriptions by creator ID (users that follow this user)",
				"tags": [
					"Subscriptions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "creatorId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/subscriptions/check/{subscriberId}/{creatorId}": {
			"get": {
				"operationId": "CheckSubscription",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"description": "Check if a user is subscribed to a creator",
				"tags": [
					"Subscriptions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "subscriberId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "creatorId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/recipes": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Recipe"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all recipes",
				"tags": [
					"Recipes"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Recipe"
								}
							}
						}
					}
				},
				"description": "Create a new recipe",
				"tags": [
					"Recipes"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Recipe_"
							}
						}
					}
				}
			}
		},
		"/recipes/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Recipe"
								}
							}
						}
					}
				},
				"description": "Get a recipe by ID",
				"tags": [
					"Recipes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Recipe"
								}
							}
						}
					}
				},
				"description": "Update an existing recipe",
				"tags": [
					"Recipes"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Recipe_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"description": "Delete a recipe",
				"tags": [
					"Recipes"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/recipes/author/{authorId}": {
			"get": {
				"operationId": "GetRecipesByAuthor",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Recipe"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get recipes by author ID",
				"tags": [
					"Recipes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "authorId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/recipes/tag/{tagName}": {
			"get": {
				"operationId": "GetRecipesByTag",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Recipe"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get recipes by tag name",
				"tags": [
					"Recipes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tagName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/likes": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Like"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all likes",
				"tags": [
					"Likes"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Like"
								}
							}
						}
					}
				},
				"description": "Create a new like",
				"tags": [
					"Likes"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Like_"
							}
						}
					}
				}
			}
		},
		"/likes/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Like"
								}
							}
						}
					}
				},
				"description": "Get a like by ID",
				"tags": [
					"Likes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"description": "Delete a like",
				"tags": [
					"Likes"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/likes/recipe/{recipeId}": {
			"get": {
				"operationId": "GetLikesByRecipe",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Like"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get likes by recipe ID",
				"tags": [
					"Likes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "recipeId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/likes/user/{userId}": {
			"get": {
				"operationId": "GetLikesByUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Like"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get likes by user ID",
				"tags": [
					"Likes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/likes/check/{userId}/{recipeId}": {
			"get": {
				"operationId": "CheckLike",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"description": "Check if a user has liked a recipe",
				"tags": [
					"Likes"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "recipeId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/comments": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Comment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all comments",
				"tags": [
					"Comments"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Comment"
								}
							}
						}
					}
				},
				"description": "Create a new comment",
				"tags": [
					"Comments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Comment_"
							}
						}
					}
				}
			}
		},
		"/comments/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Comment"
								}
							}
						}
					}
				},
				"description": "Get a comment by ID",
				"tags": [
					"Comments"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Comment"
								}
							}
						}
					}
				},
				"description": "Update an existing comment",
				"tags": [
					"Comments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_Comment_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"description": "Delete a comment",
				"tags": [
					"Comments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/comments/recipe/{recipeId}": {
			"get": {
				"operationId": "GetCommentsByRecipe",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Comment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get comments by recipe ID",
				"tags": [
					"Comments"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "recipeId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/comments/user/{userId}": {
			"get": {
				"operationId": "GetCommentsByUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Comment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get comments by user ID",
				"tags": [
					"Comments"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}