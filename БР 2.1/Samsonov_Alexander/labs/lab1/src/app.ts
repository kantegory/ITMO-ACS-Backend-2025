import express from 'express';
import swaggerUi from 'swagger-ui-express';
import { RegisterRoutes } from './routes'; // This file is generated by tsoa
import { readFileSync } from 'fs';
import { join } from 'path';

const app = express();
app.use(express.json());

// Register routes generated by tsoa
RegisterRoutes(app);

// Serve Swagger UI using the generated swagger.json
const swaggerFile = join(__dirname, 'swagger.json'); // This file is generated by tsoa
try {
  const swaggerData = readFileSync(swaggerFile, 'utf8');
  const swaggerSpec = JSON.parse(swaggerData);
  app.use('/docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));
} catch (err) {
  console.error('Unable to load swagger.json', err);
}

// Add error handling middleware for tsoa
app.use(function errorHandler(err: any, req: express.Request, res: express.Response, next: express.NextFunction) {
  const status = err.status || 500;
  const message = err.message || 'Internal Server Error';

  res.status(status).json({
    message: message,
    status: status
  });
});

export default app;
